Requirement: Helps with describing what the solution will do.
Functional or non-functional and SRS is the formal specifications/needs of a solution. In regards of SDLC phases, the SRS is a precondition for design phase.
Analysis, requirements are like goals that should be like SMART. Requirements analysis is how a team understands an action, as much as possible, and the solution.
Hard to read/understand.. Why? ---> Customers create them and define them.

Try to write the requirements for simple arcade style driving game where the player has to navigate around obstacles to keep from crashing.

** Functional Requirements **

Create an objective
- Navigate car through obstacles without colliding with anything / stay on road.

Controls
- Use arrow keys for steering --> Web app?
- Touch screen --> Mobile app?
- Acceleration controls
- Brake
- Move left to right

Obstacles
- Introduce various obstacles such as:
- Cones, barriers, and moving objects that the player needs to avoid.

Levels
- Design levels introudicng obstacles such as easy, medium, hard.
- Add tiers to each level to make it difficult by giving multiple lives or attempts.

Scoring System
- Create system of scores that are scored.
- Maybe add bonus points for successful actions or times, achieving milestones.
- Add bonus points avoiding collision.
- Scoreboard for multiplayer to share and compete against one another.

UI
- Make a friendly interface that is easy to navigate through.
- Simple buttons and controls that can be easily understood.

Platform Utilized
- Make a decision whether you want to make a mobile app or web version app.
- As mentioned above, controls vary on whether you are creating a web or mobile app.

Game Over 
- Game must end.
- Define scenario triggered by collision showing final score.
- Game must have an option to restart or quit.
---------------------------------------------------------------------------------------------
** Non Functional Requirements **
- Different powerups to upgrade the cars functionality such as speed and design.
- Different maps and environments with many different obstacles.
- Explore option to include a screensaver with visuals before launching a race.
---------------------------------------------------------------------------------------------
Mandatory Non Functional Requirements
- Ensure smooth gameplay with performance.
- Accessibility: Design the game with a fixed amount of players and difficulty settings.
---------------------------------------------------------------------------------------------
Happy Path
- Players navigate the car earning points.
- Smooth simple controls to enhance game experience.
- Error handling to prevent bugs or glitches.
---------------------------------------------------------------------------------------------
Unhappy Path
- Players collide with obstacles, causing game to end or the ability to restart.
- Able to restart game or return after game over scenario.


How do you know when you are done with the requirements phase?
When all input meets the requirements or given information on clear documentation that makes sure it matches the overall goals of the provided project.
Check for any expected changes and go over/analyze if the plan works and/or use prototypes to make sure everything is understood and reviewed for the project.
